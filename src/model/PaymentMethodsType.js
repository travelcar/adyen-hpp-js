/**
 * Adyen HPP
 * Hosted Payment Pages
 *
 * OpenAPI spec version: 1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.2.3
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.AdyenHppJs) {
      root.AdyenHppJs = {};
    }
    root.AdyenHppJs.PaymentMethodsType = factory(root.AdyenHppJs.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';




  /**
   * The PaymentMethodsType model module.
   * @module model/PaymentMethodsType
   * @version 1.1.0
   */

  /**
   * Constructs a new <code>PaymentMethodsType</code>.
   * Contains the information about the available payment methods
   * @alias module:model/PaymentMethodsType
   * @class
   * @param brandCode {String} Code of the payment method brand.
   * @param logo {String} Image of the logo for the payment methods.
   * @param name {String} Name of the payment method brand.
   */
  var exports = function(brandCode, logo, name) {
    var _this = this;

    _this['brandCode'] = brandCode;
    _this['logo'] = logo;
    _this['name'] = name;
  };

  /**
   * Constructs a <code>PaymentMethodsType</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/PaymentMethodsType} obj Optional instance to populate.
   * @return {module:model/PaymentMethodsType} The populated <code>PaymentMethodsType</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('brandCode')) {
        obj['brandCode'] = ApiClient.convertToType(data['brandCode'], 'String');
      }
      if (data.hasOwnProperty('logo')) {
        obj['logo'] = ApiClient.convertToType(data['logo'], 'String');
      }
      if (data.hasOwnProperty('name')) {
        obj['name'] = ApiClient.convertToType(data['name'], 'String');
      }
    }
    return obj;
  }

  /**
   * Code of the payment method brand.
   * @member {String} brandCode
   */
  exports.prototype['brandCode'] = undefined;
  /**
   * Image of the logo for the payment methods.
   * @member {String} logo
   */
  exports.prototype['logo'] = undefined;
  /**
   * Name of the payment method brand.
   * @member {String} name
   */
  exports.prototype['name'] = undefined;


  /**
   * Returns Code of the payment method brand.
   * @return {String}
   */
  exports.prototype.getBrandCode = function() {
    return this['brandCode'];
  }

  /**
   * Sets Code of the payment method brand.
   * @param {String} brandCode Code of the payment method brand.
   */
  exports.prototype.setBrandCode = function(brandCode) {
    this['brandCode'] = brandCode;
  }


  /**
   * Returns Image of the logo for the payment methods.
   * @return {String}
   */
  exports.prototype.getLogo = function() {
    return this['logo'];
  }

  /**
   * Sets Image of the logo for the payment methods.
   * @param {String} logo Image of the logo for the payment methods.
   */
  exports.prototype.setLogo = function(logo) {
    this['logo'] = logo;
  }


  /**
   * Returns Name of the payment method brand.
   * @return {String}
   */
  exports.prototype.getName = function() {
    return this['name'];
  }

  /**
   * Sets Name of the payment method brand.
   * @param {String} name Name of the payment method brand.
   */
  exports.prototype.setName = function(name) {
    this['name'] = name;
  }



  return exports;
}));


